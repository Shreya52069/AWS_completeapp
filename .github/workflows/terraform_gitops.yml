name: Terraform

## Controls when workflow will run
on:
  ## Allows you to run this workflow manually from Actions tab
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  setup_env:
    name: Running Terraform
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "${{ github.workspace }}/terraform/"

    steps:
      ## Checkout check outs the current configuration. Uses defines the action/Docker image to run that specific step.
      - uses: actions/checkout@v1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.2

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

      - name: Wait for approval
        uses: trstringer/manual-approval@v1
        timeout-minutes: 1440
        ## The GITHUB_TOKEN is a special access token that you can use to authenticate on behalf of GitHub Actions. GitHub automatically creates a GITHUB_TOKEN secret for you to use in your workflow, and you can use it to authenticate in a workflow run.
        ## The GITHUB_TOKEN instead expires just right after the job is over. So even if someone is able to steal it (which is almost impossible), they basically can't do anything wrong.
        with:
          secret: ${{ github.token }} # equivalent to using ${{ secrets.GITHUB_TOKEN }}
          approvers: shreya
          minimum-approvals: 1

      - name: Terraform Apply
        run: terraform apply -auto-approve